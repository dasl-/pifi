// Do not modify this file. If you want to customize the configuration, create a file `config.json` and
// specify only the settings you want to override.
{
    // Optional, string, default: "info".
    // Valid values: "quiet", "error", "warning", "info", "debug", "all" (from quietest to most verbose).
    "log_level": "info",

    // Configuration for the web server.
    // Optional. This whole stanza is optional because none of the keys within it are required.
    "server": {
        // Optional, boolean, default: false. Set to true if you want to run the web server with SSL (https).
        "use_ssl": false,

        // Optional, string, default: "". Only applicable when use_ssl is true.
        "keyfile": "",

        // Optional, string, default: "". Only applicable when use_ssl is true.
        "certfile": "",
    },

    // Configuration used whenever displaying anything on the LEDs.
    // Required. At least one key within this stanza is required.
    "leds": {

        // Required, string. Controls which LED driver is used. Valid values: apa102, rgbmatrix, ws2812b.
        "driver": "",

        // Required, integer. The width of your LED matrix, in pixels.
        "display_width": 0,

        // Required, integer. The height of your LED matrix, in pixels.
        "display_height": 0,

        // Optional, integer, default: 3. Global brightness of LEDs. Only applicable for apa102 or ws2812b driver.
        // apa102 range: [0, 31]
        // ws2812b range: [0, 255]
        "brightness": 3,

        // Optional, boolean, default: false. Whether to swap left to right when outputting to the LED matrix.
        // Setting this might be necessary if you wired your LEDs differently.
        "flip_x": false,

        // Optional, boolean, default: false. Whether to swap top to bottom when outputting to the LED matrix.
        // Setting this might be necessary if you wired your LEDs differently.
        "flip_y": false,
    },

    // Configuration specific to displaying videos.
    // Optional. This whole stanza is optional because none of the keys within it are required.
    "video": {

        // Optional, string, default: "color". Controls whether videos are displayed in color or monochrome.
        // Valid values: color, bw, red, green, blue, inv_color, inv_bw.
        "color_mode": "color",

        // Opetional, boolean, default: true. Whether to play audio when playing videos.
        "should_play_audio": true,

        // Optional, boolean, default: false. Whether to save the videos that are played. Saving the video
        // allows us to avoid youtube-dl network calls to download the video if it's played again.
        "should_save_video": false,

        // Optional, boolean, default: false. Whether to predownload the video, as opposed to streaming it.
        // Setting this to true forces the video to fully download before playing.
        "should_predownload_video": false,
    },

    "sound": {
        // Optional integer, default: 0. The card number to use for the `amixer` command. This can be useful if
        // you use an external soundcard. Check the output of `aplay --list-devices` to determine which card
        // number to use. See: https://gist.github.com/dasl-/e400409f4f3afdcaf2aef3f40af8528f
        "card": 0,

        // Optional integer, default: 1. The numid to use for the `amixer` command. This can be useful if
        // you use an external soundcard. Check the output of `amixer -c <card_number> controls` to determine
        // which numid to use. See: https://gist.github.com/dasl-/e400409f4f3afdcaf2aef3f40af8528f
        "numid": 1,

        // Optional, ?boolean, default: null. Whether volume should be adjusted logarithmically to match
        // perceptual loudness. If the volume slider increments don't seem natural, try enabling this. Null
        // means try to autodetect (i.e. set to `true` for raspberry pi internal sound card, and set to
        // `false` for external sound cards).
        "adjust_volume_logarithmically": null,

        // Optional, ?integer, default: null. Volume level at which to limit raspberry pi. This can be useful
        // in conjunction with the raspberry pi headphone jack, because the internal soundcard allows
        // incrementing the volume to a level which results in clipping. Null means try to autodetect (i.e.
        // set to `0` for raspberry pi internal sound card, and set to the global max vol val for external
        // sound cards).
        "limited_max_vol_val": null,
    },

    // Configuration specific to the screensavers that play while nothing is in the playlist queue.
    // Optional. This whole stanza is optional because none of the keys within it are required.
    "screensavers": {

        // Optional, array, default: ["game_of_life", "cyclic_automaton"]. The screensavers to cycle through.
        // Other values include "saved_videos" which will pull from a local list of saved videos
        "screensavers": ["game_of_life", "cyclic_automaton"]
    },

    // Configuration specific to the game of life.
    // Optional. This whole stanza is optional because none of the keys within it are required.
    "game_of_life": {

        // Optional, float in range: [0,1], default: 0.3333. How likely each pixel is to be alive (on)
        // in the initial state.
        "seed_liveness_probability": 0.3333,

        // Optional, float, default: 0.07. How long to sleep between ticks, in seconds,
        "tick_sleep": 0.07,

        // Optional, integer, default: 16. How many frames are analyzed to determine if we are stuck in a loop
        // and if we should to end the game.
        "game_over_detection_lookback": 16,

        // Optional, string, default: "random". The color mode for the game.
        // Valid values: "random", "red", "green", "blue", "bw", "rainbow".
        "game_color_mode": "random",

        // Optional, string, default: "random". The variant for the game.
        // Valid values: "normal", "immigration".
        // See: https://cs.stanford.edu/people/eroberts/courses/soco/projects/2008-09/modeling-natural-systems/gameOfLife2.html
        "variant": "random",

        // Optional, boolean, default: false. Whether to do fade transitions between frames of the game.
        "fade": false,

        // Optional, boolean, default: false. Whether to invert the colors.
        "invert": false,
    },

    // Configuration specific to cyclic automaton: https://en.wikipedia.org/wiki/Cyclic_cellular_automaton
    // Optional. This whole stanza is optional because none of the keys within it are required.
    "cyclic_automaton": {

        // Optional, float, default: 0.07. How long to sleep between ticks, in seconds,
        "tick_sleep": 0.07,

        // Optional, integer, default: 16. How many frames are analyzed to determine if we are stuck in a loop
        // and if we should to end the game.
        "game_over_detection_lookback": 16,

        // Optional, boolean, default: false. Whether to do fade transitions between frames of the game.
        "fade": false,
    },

    // Configuration specific to playing snake.
    // Optional. This whole stanza is optional because none of the keys within it are required.
    "snake": {

        // Optional, string, default: "random". The color mode for the game.
        // Valid values: "random", "red", "green", "blue", "bw", "rainbow".
        "game_color_mode": "random",
    },

}
